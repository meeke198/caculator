[{"/Users/hienthu/Documents/01-starting-project/src/index.js":"1","/Users/hienthu/Documents/01-starting-project/src/App.js":"2","/Users/hienthu/Documents/01-starting-project/src/components/Header/Header.js":"3","/Users/hienthu/Documents/01-starting-project/src/components/ResultTable/ResultTable.js":"4","/Users/hienthu/Documents/01-starting-project/src/components/UserInput/UserInput.js":"5"},{"size":255,"mtime":1686643417000,"results":"6","hashOfConfig":"7"},{"size":1632,"mtime":1688015024507,"results":"8","hashOfConfig":"7"},{"size":260,"mtime":1688015208807,"results":"9","hashOfConfig":"7"},{"size":498,"mtime":1688014975205,"results":"10","hashOfConfig":"7"},{"size":1605,"mtime":1688015837105,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uyz8cn",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hienthu/Documents/01-starting-project/src/index.js",[],[],"/Users/hienthu/Documents/01-starting-project/src/App.js",["28","29"],[],"import logo from './assets/investment-calculator-logo.png';\nimport Header from './components/Header/Header';\nimport ResultTable from './components/ResultTable/ResultTable';\nimport UserInput from './components/UserInput/UserInput';\nfunction App() {\n  const calculateHandler = (userInput) => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +userInput['current-savings']; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput['expected-return'] / 100;\n    const duration = +userInput['duration'];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n\n    // do something with yearlyData ...\n  };\n\n  return (\n    <div>\n     <Header/>\n\n     <UserInput/>\n\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n\n      <ResultTable/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/hienthu/Documents/01-starting-project/src/components/Header/Header.js",[],[],"/Users/hienthu/Documents/01-starting-project/src/components/ResultTable/ResultTable.js",[],[],"/Users/hienthu/Documents/01-starting-project/src/components/UserInput/UserInput.js",[],[],{"ruleId":"30","severity":1,"message":"31","line":1,"column":8,"nodeType":"32","messageId":"33","endLine":1,"endColumn":12},{"ruleId":"30","severity":1,"message":"34","line":6,"column":9,"nodeType":"32","messageId":"33","endLine":6,"endColumn":25},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'calculateHandler' is assigned a value but never used."]